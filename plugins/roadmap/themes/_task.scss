/**
 * Copyright (c) Enalean, 2021 - Present. All Rights Reserved.
 *
 * This file is a part of Tuleap.
 *
 * Tuleap is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Tuleap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
 */

@use '../../../src/themes/tlp/src/scss/variables/colors/swatch-colors';
@use 'roadmap-variables';
@use 'grid';
@use 'sass:math';
@use 'dependencies';
@use 'popover';

.roadmap-gantt-task {
    $radius: 4px;

    display: flex;
    position: relative;
    height: roadmap-variables.$task-height;

    &:first-child > .roadmap-gantt-task-header {
        border-top-left-radius: $radius;
    }

    &:last-child > .roadmap-gantt-task-header {
        border-bottom: 0;
        border-bottom-left-radius: $radius;
    }

    &:last-child > .roadmap-gantt-task-background-grid > .roadmap-gantt-task-background-grid-unit {
        border-bottom: 0;
    }
}

.roadmap-gantt-task-header {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: roadmap-variables.$task-header-width;
    min-width: roadmap-variables.$task-header-width;
    height: 100%;
    padding: calc(var(--tlp-small-spacing) - 2px) var(--tlp-large-spacing) calc(var(--tlp-small-spacing) - 2px) calc(var(--tlp-small-spacing) - 4px);
    border-right: 2px solid var(--tlp-ui-border-normal);
    border-bottom: 1px solid var(--tlp-ui-border-normal);
    color: var(--tlp-typo-default-text-color);
    white-space: nowrap;
}

.roadmap-gantt-task-header-xref {
    font-size: .625rem;
    line-height: .75rem;
}

.roadmap-gantt-task-header-title {
    overflow: hidden;
    font-size: .8125rem;
    line-height: .9375rem;
    text-overflow: ellipsis;

    > .tlp-skeleton-text {
        width: 100%;
    }
}

@each $color-name, $colors in swatch-colors.$tlp-swatch-color-map {
    .roadmap-gantt-task-header-#{$color-name} {
        border-left: 4px solid map-get($colors, 'border');

        > .roadmap-gantt-task-header-xref {
            color: map-get($colors, 'text');
        }
    }
}

.roadmap-gantt-task-background-grid {
    display: flex;
}

.roadmap-gantt-task-background-grid-unit {
    @include grid.alternate-background;

    display: flex;
    width: roadmap-variables.$time-unit-width;
}

.roadmap-gantt-task-bar {
    position: absolute;
    z-index: roadmap-variables.$z-index-bars;
    top: math.floor((roadmap-variables.$task-height - roadmap-variables.$task-bar-height) / 2);
    min-width: roadmap-variables.$task-bar-min-width;
    height: roadmap-variables.$task-bar-height;
    padding: 1px;
    overflow: hidden;
    transform: translateX(roadmap-variables.$task-header-width);
    border: 1px solid var(--tlp-ui-dimmed);
    border-radius: 3px;
    background: var(--tlp-ui-dimmed);

    @each $color-name, $colors in swatch-colors.$tlp-swatch-color-map {
        &.roadmap-gantt-task-bar-#{$color-name} {
            border-color: map-get($colors, 'primary');
            background: map-get($colors, 'secondary');

            > .roadmap-gantt-task-bar-progress {
                background: map-get($colors, 'primary');
            }
        }
    }

    &.tlp-skeleton-text {
        border: 0;
        background: none;

        &::after {
            height: 100%;
        }

        > .roadmap-gantt-task-bar-progress {
            display: none;
        }
    }
}

.roadmap-gantt-task-bar-progress {
    width: 100%;
    height: 100%;
    border-radius: 2px;
}

.roadmap-gantt-task-bar-milestone {
    $width-of-square-once-rotated: roadmap-variables.$task-milestone-width / math.sqrt(2);
    $new-horizontal-offset: roadmap-variables.$task-header-width + (roadmap-variables.$task-milestone-width - $width-of-square-once-rotated) / 2;

    top: math.floor((roadmap-variables.$task-height - $width-of-square-once-rotated) / 2);
    width: $width-of-square-once-rotated;
    min-width: $width-of-square-once-rotated;
    height: $width-of-square-once-rotated;
    transform: translateX($new-horizontal-offset) rotate(45deg);
}
