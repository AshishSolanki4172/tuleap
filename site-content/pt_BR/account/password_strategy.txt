<?php
/**
 * Copyright (c) Enalean, 2014 - Presente. Todos os Direitos Reservados.
 * Copyright (c) Xerox Corporation, Codendi Team, 2001-2009. Todos os Direitos Reservados.
 *
 * Este arquivo faz parte do Tuleap.
 *
 * Tuleap é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * sob os termos da GNU General Public License conforme publicada pela
 * Free Software Foundation; seja a versão 2 da Licença, ou
 * (a seu critério) qualquer versão posterior.
 *
 * Tuleap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
 */

/*
You can customize password validation rules by editing this file in /etc/codendi/site-content/.../account directories.
- you can use PasswordRegexpValidator, as described below.
- you may also create your own validators. Here is an example:

class MyPasswordValidator extends PasswordValidator {

   function MyPasswordValidator() {
      $this->PasswordValidator('The description of my validator, displayed when choosing a password');
   }

   function validate($pwd) {
      //Check that the $pwd is valid
      ...
      return false || true;
   }
}


*/



/*
Below is your strategy used to validate the passwords.
Feel free to (un)comment the following lines to feed your needs.
Do not forget to add your custom validators.

*/
$password_strategy->add(new PasswordRegexpValidator('/.{8,}/', 'The password must contains at least 8 characters.'));
//$password_strategy->add(new PasswordRegexpValidator('/[^a-zA-Z0-9]{2,}/', 'The password must contains at least 2 special characters.'));
//$password_strategy->add(new PasswordRegexpValidator('/[a-z]{1,}/', 'The password must contains a lowercase letter.'));
//$password_strategy->add(new PasswordRegexpValidator('/[A-Z]{1,}/', 'The password must contains an uppercase letter.'));
//$password_strategy->add(new PasswordRegexpValidator('/[0-9]{1,}/', 'The password must contains a number.'));
//$password_strategy->add(new MyPasswordValidator());

?>
