<?php
/**
 * Copyright (c) Enalean, 2024-Present. All Rights Reserved.
 *
 * This file is a part of Tuleap.
 *
 * Tuleap is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Tuleap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
 */

declare(strict_types=1);

namespace Enalean\Cve202430246;

use SplFileObject;
use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Helper\QuestionHelper;
use Symfony\Component\Console\Input\InputDefinition;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

#[AsCommand(
    'retrieve',
    <<<EOT
    Outputs SQL queries to recreate the missing changeset values
    EOT
)]
final class RetrieveMissingValuesCommand extends Command
{
    private const INPUT_JSON_PATH = 'input-file';
    private const OUTPUT_SQL_PATH = 'output-file';

    protected function configure(): void
    {
        $this->setDefinition(
            new InputDefinition([
                ...DatabaseOptions::getConsoleInputOptions(),
                new InputOption(self::INPUT_JSON_PATH, 'i', InputOption::VALUE_REQUIRED, 'Path of the document containing the changeset values possibly affected'),
                new InputOption(self::OUTPUT_SQL_PATH, 'o', InputOption::VALUE_REQUIRED, 'Output path of the SQL file'),
            ])
        );
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $input_json_path = $input->getOption(self::INPUT_JSON_PATH);
        if ($input_json_path === null) {
            $output->writeln(sprintf('--%s option is required', self::INPUT_JSON_PATH));
            return Command::INVALID;
        }

        $output_sql_path = $input->getOption(self::OUTPUT_SQL_PATH);
        if ($output_sql_path === null) {
            $output->writeln(sprintf('--%s option is required', self::OUTPUT_SQL_PATH));
            return Command::INVALID;
        }

        $db_options = DatabaseOptions::buildFromConsoleInputs($input, $output, new QuestionHelper());
        if ($db_options === null) {
            return Command::INVALID;
        }

        $mapper   = (new \CuyZ\Valinor\MapperBuilder())->mapper();
        $document = $mapper->map(
            MissingChangesetDocument::class,
            \CuyZ\Valinor\Mapper\Source\Source::file(
                new SplFileObject($input_json_path)
            )
        );

        $db_querier          = new DatabaseQuerier($db_options);
        $sql_queries_creator = new SQLQueryMissingChangesetValueCreator($db_querier, $output);

        \file_put_contents($output_sql_path, $sql_queries_creator->createSQLQueriesForMissingChangesetValues($document));

        return Command::SUCCESS;
    }
}
