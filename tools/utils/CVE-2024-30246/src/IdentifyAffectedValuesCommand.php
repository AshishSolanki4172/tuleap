<?php
/**
 * Copyright (c) Enalean, 2024-Present. All Rights Reserved.
 *
 * This file is a part of Tuleap.
 *
 * Tuleap is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Tuleap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
 */

declare(strict_types=1);

namespace Enalean\Cve202430246;

use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Helper\QuestionHelper;
use Symfony\Component\Console\Input\InputDefinition;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

#[AsCommand(
    'identify',
    <<<EOT
    Outputs a JSON string containing all changeset values suspected to be affected
    EOT
)]
final class IdentifyAffectedValuesCommand extends Command
{
    private const OUTPUT_JSON_PATH = 'output-file';

    protected function configure(): void
    {
        $this->setDefinition(
            new InputDefinition([
                new InputOption(DatabaseCredentials::DB_HOST_OPTION, null, InputOption::VALUE_REQUIRED),
                new InputOption(DatabaseCredentials::DB_NAME_OPTION, null, InputOption::VALUE_REQUIRED),
                new InputOption(DatabaseCredentials::DB_PASSWORD_OPTION, null, InputOption::VALUE_OPTIONAL),
                new InputOption(DatabaseCredentials::DB_USER_NAME_OPTION, null, InputOption::VALUE_REQUIRED),
                new InputOption(self::OUTPUT_JSON_PATH, 'o', InputOption::VALUE_REQUIRED),
            ])
        );
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $output_json_path = $input->getOption(self::OUTPUT_JSON_PATH);

        if ($output_json_path === null) {
            $output->writeln(sprintf('--%s option is required', self::OUTPUT_JSON_PATH));
            return Command::INVALID;
        }

        $credentials = DatabaseCredentials::buildFromConsoleInputs($input, $output, new QuestionHelper());

        if ($credentials === null) {
            return Command::INVALID;
        }

        $db_querier = new DatabaseQuerier($credentials);
        $searcher   = new AffectedValuesSearcher($db_querier, $output, false);

        $document = $searcher->search();

        \file_put_contents($output_json_path, json_encode($document, JSON_THROW_ON_ERROR));

        return Command::SUCCESS;
    }
}
