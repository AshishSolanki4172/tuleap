#!/usr/bin/env groovy

@Library('tuleap-jenkinsfile-library@master') _

pipeline {
    agent {
        label 'docker'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'RelativeTargetDirectory', relativeTargetDir: 'sources']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitolite-tuleap-net', url: 'ssh://gitolite@tuleap.net/tuleap/tuleap/stable.git']]]
                checkout scm
            }
        }

        stage('Build RPM') {
            steps {
                script {
                    dir ('sources/plugins/baseline') {
                        sh "mkdir -p ${WORKSPACE}/packages"
                        sh "TULEAP_PATH=${WORKSPACE}/sources WORKSPACE=${WORKSPACE}/packages ./build-rpm.sh"
                    }
                }
            }
            post {
                always {
                    archiveArtifacts "packages/*.rpm"
                }
            }
        }

        stage('Antiviral scan') {
            steps {
                script {
                    def lib = new org.tuleap.Build();
                    lib.antiviralScan(pwd() + '/packages/')
                }
            }
        }

        stage('Build repositories') {
            steps {
                script {
                    docker.image('nexus.enalean.com:20000/createrepo').inside() {
                        sh 'createrepo --checksum=sha256 --compress-type=gz packages/'
                    }
                }
            }
        }

        stage('Sign repositories metadata') {
            steps {
                script {
                    def lib_signing = new org.tuleap.Signing();
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'vault-role-enterprise-signing-key', passwordVariable: 'SECRET_ID', usernameVariable: 'ROLE_ID']]) {
                        lib_signing.signRepositories(pwd() + '/packages/', env.VAULT, env.ROLE_ID, env.SECRET_ID, 'gpg/sign/tuleap-enterprise-rpm-signing');
                    }
                }
            }
        }

        stage('Publish repositories') {
            steps {
                script {
                    docker.image('nexus.enalean.com:20000/rsync').inside('-v /jenkins/.ssh:/root/.ssh -u root') {
                        sshagent(['enalean_packages-my-enalean-com']) {
                            sh """
                            DISTRIBUTION=dev
                            OS='rhel6 rhel7'

                            for i in \$OS; do
                                #ssh enalean_packages@my.enalean.com mkdir -p /var/lib/enalean_packages/yum/tuleap-baseline/\$DISTRIBUTION/\$i
                                #rsync -r --delete-after ${WORKSPACE}/packages/ enalean_packages@my.enalean.com:/var/lib/enalean_packages/yum/tuleap-baseline/\$DISTRIBUTION/\$i/noarch
                            done
                            """
                        }
                    }
                }
            }
        }
    }
}
